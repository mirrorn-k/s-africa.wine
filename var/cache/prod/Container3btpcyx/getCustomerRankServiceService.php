<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'Plugin\CustomerRank\Service\CustomerRankService' shared autowired service.

include_once $this->targetDirs[3].'/app/Plugin/CustomerRank/Service/CustomerRankService.php';

return $this->services['Plugin\\CustomerRank\\Service\\CustomerRankService'] = new \Plugin\CustomerRank\Service\CustomerRankService(${($_ = isset($this->services['security.authorization_checker']) ? $this->services['security.authorization_checker'] : $this->getSecurity_AuthorizationCheckerService()) && false ?: '_'}, ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : ($this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->getDoctrine_Orm_DefaultEntityManagerService()) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Repository\\ProductClassRepository']) ? $this->services['Eccube\\Repository\\ProductClassRepository'] : $this->getProductClassRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\CustomerRank\\Repository\\CustomerRankRepository']) ? $this->services['Plugin\\CustomerRank\\Repository\\CustomerRankRepository'] : $this->load('getCustomerRankRepositoryService.php')) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\CustomerRank\\Repository\\CustomerPriceRepository']) ? $this->services['Plugin\\CustomerRank\\Repository\\CustomerPriceRepository'] : $this->load('getCustomerPriceRepositoryService.php')) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\CustomerRank\\Repository\\ConfigRepository']) ? $this->services['Plugin\\CustomerRank\\Repository\\ConfigRepository'] : $this->load('getConfigRepositoryService.php')) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\CustomerRank\\Repository\\ConfigStatusRepository']) ? $this->services['Plugin\\CustomerRank\\Repository\\ConfigStatusRepository'] : $this->load('getConfigStatusRepositoryService.php')) && false ?: '_'});
