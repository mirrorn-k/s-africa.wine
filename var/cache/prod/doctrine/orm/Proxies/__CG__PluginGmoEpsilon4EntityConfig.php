<?php

namespace Proxies\__CG__\Plugin\GmoEpsilon4\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Config extends \Plugin\GmoEpsilon4\Entity\Config implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'id', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'contract_code', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'destination_url', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'info_conf_url', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'ssl_version', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'use_payment', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'use_convenience', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'block_mode', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'access_frequency_time', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'access_frequency', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'block_time', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'white_list'];
        }

        return ['__isInitialized__', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'id', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'contract_code', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'destination_url', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'info_conf_url', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'ssl_version', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'use_payment', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'use_convenience', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'block_mode', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'access_frequency_time', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'access_frequency', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'block_time', '' . "\0" . 'Plugin\\GmoEpsilon4\\Entity\\Config' . "\0" . 'white_list'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Config $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getContractCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContractCode', []);

        return parent::getContractCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setContractCode($contract_code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContractCode', [$contract_code]);

        return parent::setContractCode($contract_code);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestinationUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestinationUrl', []);

        return parent::getDestinationUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setDestinationUrl($destination_url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDestinationUrl', [$destination_url]);

        return parent::setDestinationUrl($destination_url);
    }

    /**
     * {@inheritDoc}
     */
    public function getInfoConfUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInfoConfUrl', []);

        return parent::getInfoConfUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setInfoConfUrl($info_conf_url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInfoConfUrl', [$info_conf_url]);

        return parent::setInfoConfUrl($info_conf_url);
    }

    /**
     * {@inheritDoc}
     */
    public function getSslVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSslVersion', []);

        return parent::getSslVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setSslVersion($ssl_version)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSslVersion', [$ssl_version]);

        return parent::setSslVersion($ssl_version);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsePayment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsePayment', []);

        return parent::getUsePayment();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsePayment($use_payment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsePayment', [$use_payment]);

        return parent::setUsePayment($use_payment);
    }

    /**
     * {@inheritDoc}
     */
    public function getUseConvenience()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUseConvenience', []);

        return parent::getUseConvenience();
    }

    /**
     * {@inheritDoc}
     */
    public function setUseConvenience($use_convenience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUseConvenience', [$use_convenience]);

        return parent::setUseConvenience($use_convenience);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlockMode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlockMode', []);

        return parent::getBlockMode();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlockMode($block_mode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlockMode', [$block_mode]);

        return parent::setBlockMode($block_mode);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessFrequencyTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessFrequencyTime', []);

        return parent::getAccessFrequencyTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessFrequencyTime($access_frequency_time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessFrequencyTime', [$access_frequency_time]);

        return parent::setAccessFrequencyTime($access_frequency_time);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessFrequency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessFrequency', []);

        return parent::getAccessFrequency();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessFrequency($access_frequency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessFrequency', [$access_frequency]);

        return parent::setAccessFrequency($access_frequency);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlockTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlockTime', []);

        return parent::getBlockTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlockTime($block_time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlockTime', [$block_time]);

        return parent::setBlockTime($block_time);
    }

    /**
     * {@inheritDoc}
     */
    public function getWhiteList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWhiteList', []);

        return parent::getWhiteList();
    }

    /**
     * {@inheritDoc}
     */
    public function setWhiteList($white_list)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWhiteList', [$white_list]);

        return parent::setWhiteList($white_list);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetExists($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetExists', [$offset]);

        return parent::offsetExists($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetSet($offset, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetSet', [$offset, $value]);

        return parent::offsetSet($offset, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetGet($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetGet', [$offset]);

        return parent::offsetGet($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetUnset($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetUnset', [$offset]);

        return parent::offsetUnset($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function setPropertiesFromArray(array $arrProps, array $excludeAttribute = array (
), \ReflectionClass $parentClass = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPropertiesFromArray', [$arrProps, $excludeAttribute, $parentClass]);

        return parent::setPropertiesFromArray($arrProps, $excludeAttribute, $parentClass);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray(array $excludeAttribute = array (
  0 => '__initializer__',
  1 => '__cloner__',
  2 => '__isInitialized__',
  3 => 'AnnotationReader',
), \ReflectionClass $parentClass = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', [$excludeAttribute, $parentClass]);

        return parent::toArray($excludeAttribute, $parentClass);
    }

    /**
     * {@inheritDoc}
     */
    public function toNormalizedArray(array $excludeAttribute = array (
  0 => '__initializer__',
  1 => '__cloner__',
  2 => '__isInitialized__',
  3 => 'AnnotationReader',
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toNormalizedArray', [$excludeAttribute]);

        return parent::toNormalizedArray($excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function toJSON(array $excludeAttribute = array (
  0 => '__initializer__',
  1 => '__cloner__',
  2 => '__isInitialized__',
  3 => 'AnnotationReader',
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toJSON', [$excludeAttribute]);

        return parent::toJSON($excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function toXML(array $excludeAttribute = array (
  0 => '__initializer__',
  1 => '__cloner__',
  2 => '__isInitialized__',
  3 => 'AnnotationReader',
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toXML', [$excludeAttribute]);

        return parent::toXML($excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function copyProperties($srcObject, array $excludeAttribute = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'copyProperties', [$srcObject, $excludeAttribute]);

        return parent::copyProperties($srcObject, $excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function setAnnotationReader(\Doctrine\Common\Annotations\Reader $Reader)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnnotationReader', [$Reader]);

        return parent::setAnnotationReader($Reader);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnotationReader()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnotationReader', []);

        return parent::getAnnotationReader();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityIdentifierAsArray(\Eccube\Entity\AbstractEntity $Entity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityIdentifierAsArray', [$Entity]);

        return parent::getEntityIdentifierAsArray($Entity);
    }

}
