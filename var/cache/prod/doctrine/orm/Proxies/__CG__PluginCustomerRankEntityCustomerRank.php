<?php

namespace Proxies\__CG__\Plugin\CustomerRank\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CustomerRank extends \Plugin\CustomerRank\Entity\CustomerRank implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'id', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'name', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'discount_rate', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'discount_value', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'point_rate', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'delivery_free_condition', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'cond_amount', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'cond_buytimes', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'initial_flg', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'fixed_flg', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'priority', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'create_date', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'update_date'];
        }

        return ['__isInitialized__', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'id', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'name', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'discount_rate', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'discount_value', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'point_rate', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'delivery_free_condition', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'cond_amount', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'cond_buytimes', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'initial_flg', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'fixed_flg', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'priority', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'create_date', '' . "\0" . 'Plugin\\CustomerRank\\Entity\\CustomerRank' . "\0" . 'update_date'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CustomerRank $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscountRate($discountRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscountRate', [$discountRate]);

        return parent::setDiscountRate($discountRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscountRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscountRate', []);

        return parent::getDiscountRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscountValue($discountValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscountValue', [$discountValue]);

        return parent::setDiscountValue($discountValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscountValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscountValue', []);

        return parent::getDiscountValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setPointRate($pointRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPointRate', [$pointRate]);

        return parent::setPointRate($pointRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPointRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPointRate', []);

        return parent::getPointRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeliveryFreeCondition($deliveryFreeCondition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeliveryFreeCondition', [$deliveryFreeCondition]);

        return parent::setDeliveryFreeCondition($deliveryFreeCondition);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeliveryFreeCondition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeliveryFreeCondition', []);

        return parent::getDeliveryFreeCondition();
    }

    /**
     * {@inheritDoc}
     */
    public function setCondAmount($condAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCondAmount', [$condAmount]);

        return parent::setCondAmount($condAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getCondAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCondAmount', []);

        return parent::getCondAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setCondBuytimes($condBuytimes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCondBuytimes', [$condBuytimes]);

        return parent::setCondBuytimes($condBuytimes);
    }

    /**
     * {@inheritDoc}
     */
    public function getCondBuytimes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCondBuytimes', []);

        return parent::getCondBuytimes();
    }

    /**
     * {@inheritDoc}
     */
    public function setInitialFlg($initialFlg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInitialFlg', [$initialFlg]);

        return parent::setInitialFlg($initialFlg);
    }

    /**
     * {@inheritDoc}
     */
    public function getInitialFlg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInitialFlg', []);

        return parent::getInitialFlg();
    }

    /**
     * {@inheritDoc}
     */
    public function setFixedFlg($fixedFlg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFixedFlg', [$fixedFlg]);

        return parent::setFixedFlg($fixedFlg);
    }

    /**
     * {@inheritDoc}
     */
    public function getFixedFlg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFixedFlg', []);

        return parent::getFixedFlg();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority($priority)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', [$priority]);

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', []);

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateDate', [$date]);

        return parent::setCreateDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateDate', []);

        return parent::getCreateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateDate', [$date]);

        return parent::setUpdateDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateDate', []);

        return parent::getUpdateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function offsetExists($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetExists', [$offset]);

        return parent::offsetExists($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetSet($offset, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetSet', [$offset, $value]);

        return parent::offsetSet($offset, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetGet($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetGet', [$offset]);

        return parent::offsetGet($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetUnset($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetUnset', [$offset]);

        return parent::offsetUnset($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function setPropertiesFromArray(array $arrProps, array $excludeAttribute = array (
), \ReflectionClass $parentClass = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPropertiesFromArray', [$arrProps, $excludeAttribute, $parentClass]);

        return parent::setPropertiesFromArray($arrProps, $excludeAttribute, $parentClass);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray(array $excludeAttribute = array (
  0 => '__initializer__',
  1 => '__cloner__',
  2 => '__isInitialized__',
  3 => 'AnnotationReader',
), \ReflectionClass $parentClass = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', [$excludeAttribute, $parentClass]);

        return parent::toArray($excludeAttribute, $parentClass);
    }

    /**
     * {@inheritDoc}
     */
    public function toNormalizedArray(array $excludeAttribute = array (
  0 => '__initializer__',
  1 => '__cloner__',
  2 => '__isInitialized__',
  3 => 'AnnotationReader',
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toNormalizedArray', [$excludeAttribute]);

        return parent::toNormalizedArray($excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function toJSON(array $excludeAttribute = array (
  0 => '__initializer__',
  1 => '__cloner__',
  2 => '__isInitialized__',
  3 => 'AnnotationReader',
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toJSON', [$excludeAttribute]);

        return parent::toJSON($excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function toXML(array $excludeAttribute = array (
  0 => '__initializer__',
  1 => '__cloner__',
  2 => '__isInitialized__',
  3 => 'AnnotationReader',
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toXML', [$excludeAttribute]);

        return parent::toXML($excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function copyProperties($srcObject, array $excludeAttribute = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'copyProperties', [$srcObject, $excludeAttribute]);

        return parent::copyProperties($srcObject, $excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function setAnnotationReader(\Doctrine\Common\Annotations\Reader $Reader)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnnotationReader', [$Reader]);

        return parent::setAnnotationReader($Reader);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnotationReader()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnotationReader', []);

        return parent::getAnnotationReader();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityIdentifierAsArray(\Eccube\Entity\AbstractEntity $Entity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityIdentifierAsArray', [$Entity]);

        return parent::getEntityIdentifierAsArray($Entity);
    }

}
