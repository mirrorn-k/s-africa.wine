<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'Plugin\SitemapXmlGenerator\Service\SitemapXmlService' shared autowired service.

include_once $this->targetDirs[3].'/app/Plugin/SitemapXmlGenerator/Service/SitemapXmlService.php';

return $this->services['Plugin\\SitemapXmlGenerator\\Service\\SitemapXmlService'] = new \Plugin\SitemapXmlGenerator\Service\SitemapXmlService(${($_ = isset($this->services['Plugin\\SitemapXmlGenerator\\Repository\\SitemapXmlRepository']) ? $this->services['Plugin\\SitemapXmlGenerator\\Repository\\SitemapXmlRepository'] : $this->load('getSitemapXmlRepositoryService.php')) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Repository\\PageRepository']) ? $this->services['Eccube\\Repository\\PageRepository'] : $this->getPageRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Repository\\CategoryRepository']) ? $this->services['Eccube\\Repository\\CategoryRepository'] : $this->load('getCategoryRepositoryService.php')) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Repository\\ProductRepository']) ? $this->services['Eccube\\Repository\\ProductRepository'] : $this->getProductRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['router']) ? $this->services['router'] : $this->getRouterService()) && false ?: '_'});
