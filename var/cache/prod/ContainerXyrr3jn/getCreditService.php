<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'Plugin\GmoEpsilon4\Service\Method\Credit' shared autowired service.

include_once $this->targetDirs[3].'/src/Eccube/Service/Payment/PaymentMethodInterface.php';
include_once $this->targetDirs[3].'/app/Plugin/GmoEpsilon4/Service/Method/GmoEpsilon.php';
include_once $this->targetDirs[3].'/app/Plugin/GmoEpsilon4/Service/Method/Credit.php';
include_once $this->targetDirs[3].'/src/Eccube/Entity/AbstractEntity.php';
include_once $this->targetDirs[3].'/app/Plugin/GmoEpsilon4/Entity/CreditAccessLog.php';
include_once $this->targetDirs[3].'/app/Plugin/GmoEpsilon4/Entity/CreditBlock.php';

return $this->services['Plugin\\GmoEpsilon4\\Service\\Method\\Credit'] = new \Plugin\GmoEpsilon4\Service\Method\Credit(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->getDoctrine_Orm_DefaultEntityManagerService()) && false ?: '_'}, ${($_ = isset($this->services['twig']) ? $this->services['twig'] : $this->getTwigService()) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Common\\EccubeConfig']) ? $this->services['Eccube\\Common\\EccubeConfig'] : ($this->services['Eccube\\Common\\EccubeConfig'] = new \Eccube\Common\EccubeConfig($this))) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Repository\\OrderRepository']) ? $this->services['Eccube\\Repository\\OrderRepository'] : $this->getOrderRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Repository\\Master\\OrderStatusRepository']) ? $this->services['Eccube\\Repository\\Master\\OrderStatusRepository'] : $this->load('getOrderStatusRepositoryService.php')) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Service\\CartService']) ? $this->services['Eccube\\Service\\CartService'] : $this->getCartServiceService()) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Service\\MailService']) ? $this->services['Eccube\\Service\\MailService'] : $this->load('getMailServiceService.php')) && false ?: '_'}, ${($_ = isset($this->services['eccube.purchase.flow.shopping']) ? $this->services['eccube.purchase.flow.shopping'] : $this->load('getEccube_Purchase_Flow_ShoppingService.php')) && false ?: '_'}, ${($_ = isset($this->services['autowired.Plugin\\GmoEpsilon4\\Entity\\CreditAccessLog']) ? $this->services['autowired.Plugin\\GmoEpsilon4\\Entity\\CreditAccessLog'] : ($this->services['autowired.Plugin\\GmoEpsilon4\\Entity\\CreditAccessLog'] = new \Plugin\GmoEpsilon4\Entity\CreditAccessLog())) && false ?: '_'}, ${($_ = isset($this->services['autowired.Plugin\\GmoEpsilon4\\Entity\\CreditBlock']) ? $this->services['autowired.Plugin\\GmoEpsilon4\\Entity\\CreditBlock'] : ($this->services['autowired.Plugin\\GmoEpsilon4\\Entity\\CreditBlock'] = new \Plugin\GmoEpsilon4\Entity\CreditBlock())) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\GmoEpsilon4\\Repository\\ConfigRepository']) ? $this->services['Plugin\\GmoEpsilon4\\Repository\\ConfigRepository'] : $this->load('getConfigRepository2Service.php')) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\GmoEpsilon4\\Repository\\CreditAccessLogRepository']) ? $this->services['Plugin\\GmoEpsilon4\\Repository\\CreditAccessLogRepository'] : $this->load('getCreditAccessLogRepositoryService.php')) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\GmoEpsilon4\\Repository\\CreditBlockRepository']) ? $this->services['Plugin\\GmoEpsilon4\\Repository\\CreditBlockRepository'] : $this->load('getCreditBlockRepositoryService.php')) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\GmoEpsilon4\\Service\\GmoEpsilonRequestService']) ? $this->services['Plugin\\GmoEpsilon4\\Service\\GmoEpsilonRequestService'] : $this->load('getGmoEpsilonRequestServiceService.php')) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Repository\\MailHistoryRepository']) ? $this->services['Eccube\\Repository\\MailHistoryRepository'] : $this->load('getMailHistoryRepositoryService.php')) && false ?: '_'});
